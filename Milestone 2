import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class EmployeeManagementGUI extends javax.swing.JFrame {

    private JLabel lblName;
    private JTextField txtName;
    private JLabel lblAge;
    private JTextField txtAge;
    private JLabel lblPosition;
    private JTextField txtPosition;
    private JButton btnCreate;
    private JButton btnUpdate;
    private JButton btnDelete;
    private JScrollPane jScrollPane1;
    private JTable tblEmployees;

    public EmployeeManagementGUI() {
        initComponents();
    }

    private void initComponents() {
        lblName = new JLabel();
        txtName = new JTextField();
        lblAge = new JLabel();
        txtAge = new JTextField();
        lblPosition = new JLabel();
        txtPosition = new JTextField();
        btnCreate = new JButton();
        btnUpdate = new JButton();
        btnDelete = new JButton();
        jScrollPane1 = new JScrollPane();
        tblEmployees = new JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MotorPH Employee Management");

        lblName.setText("Name:");
        lblAge.setText("Age:");
        lblPosition.setText("Position:");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                // Sample data rows
                {"John Doe", "30", "Manager"},
                {"Jane Smith", "25", "Developer"}
            },
            new String [] {
                "Name", "Age", "Position"
            }
        ));
        jScrollPane1.setViewportView(tblEmployees);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(lblName)
                                .addComponent(lblAge)
                                .addComponent(lblPosition))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(txtName)
                                .addComponent(txtAge)
                                .addComponent(txtPosition, GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCreate)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnUpdate)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnDelete)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAge)
                        .addComponent(txtAge, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPosition)
                        .addComponent(txtPosition, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreate)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addContainerGap())
        );

        pack();
    }

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {
        // Retrieve values from text fields
        String name = txtName.getText();
        String age = txtAge.getText();
        String position = txtPosition.getText();

        // Add new row to the table model (for demonstration, add to existing model)
        DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
        model.addRow(new Object[]{name, age, position});

        // Clear input fields after adding
        txtName.setText("");
        txtAge.setText("");
        txtPosition.setText("");
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected row index
        int selectedRowIndex = tblEmployees.getSelectedRow();
        if (selectedRowIndex != -1) {
            // Retrieve values from text fields
            String name = txtName.getText();
            String age = txtAge.getText();
            String position = txtPosition.getText();

            // Update selected row in the table model
            DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
            model.setValueAt(name, selectedRowIndex, 0);
            model.setValueAt(age, selectedRowIndex, 1);
            model.setValueAt(position, selectedRowIndex, 2);

            // Clear input fields after updating
            txtName.setText("");
            txtAge.setText("");
            txtPosition.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        // Get selected row index
        int selectedRowIndex = tblEmployees.getSelectedRow();
        if (selectedRowIndex != -1) {
            // Delete selected row from the table model
            DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
            model.removeRow(selectedRowIndex);

            // Clear input fields after deleting
            txtName.setText("");
            txtAge.setText("");
            txtPosition.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManagementGUI().setVisible(true);
            }
        });
    }
}
